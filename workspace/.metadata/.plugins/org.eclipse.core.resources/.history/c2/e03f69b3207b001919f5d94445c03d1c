package domain;

import java.util.Collection;
import java.util.Date;
import java.util.Map;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Entity;

import org.hibernate.validator.constraints.NotBlank;

@Entity
@Access(AccessType.PROPERTY)
public class Film extends DomainEntity{

	//Attributes
	
	private Map<String,String> title;
	private Map<String,String> synopsis;
	private String poster;
	private Date releaseDate;
	private Integer runTime;
	private Double avgReviewsRating;
	private String ticker;
	private boolean isDraft;
	
	//Relationships
	private Moderator moderator;
	private Collection<Genre> genres;
	private Collection<Person> persons;
	private Collection<Sponsorship> sponsorships;
	private Collection<Saga>sagas;
	
	//Getters and setters
	
	@NotBlank
	public Map<String, String> getTitle() {
		return title;
	}
	public void setTitle(Map<String, String> title) {
		this.title = title;
	}
	
	@NotBlank
	public Map<String, String> getSynopsis() {
		return synopsis;
	}
	public void setSynopsis(Map<String, String> synopsis) {
		this.synopsis = synopsis;
	}
	public String getPoster() {
		return poster;
	}
	public void setPoster(String poster) {
		this.poster = poster;
	}
	public Date getReleaseDate() {
		return releaseDate;
	}
	public void setReleaseDate(Date releaseDate) {
		this.releaseDate = releaseDate;
	}
	public Integer getRunTime() {
		return runTime;
	}
	public void setRunTime(Integer runTime) {
		this.runTime = runTime;
	}
	public Double getAvgReviewsRating() {
		return avgReviewsRating;
	}
	public void setAvgReviewsRating(Double avgReviewsRating) {
		this.avgReviewsRating = avgReviewsRating;
	}
	public String getTicker() {
		return ticker;
	}
	public void setTicker(String ticker) {
		this.ticker = ticker;
	}
	public boolean isDraft() {
		return isDraft;
	}
	public void setDraft(boolean isDraft) {
		this.isDraft = isDraft;
	}
	public Moderator getModerator() {
		return moderator;
	}
	public void setModerator(Moderator moderator) {
		this.moderator = moderator;
	}
	public Collection<Genre> getGenres() {
		return genres;
	}
	public void setGenres(Collection<Genre> genres) {
		this.genres = genres;
	}
	public Collection<Person> getPersons() {
		return persons;
	}
	public void setPersons(Collection<Person> persons) {
		this.persons = persons;
	}
	public Collection<Sponsorship> getSponsorships() {
		return sponsorships;
	}
	public void setSponsorships(Collection<Sponsorship> sponsorships) {
		this.sponsorships = sponsorships;
	}
	public Collection<Saga> getSagas() {
		return sagas;
	}
	public void setSagas(Collection<Saga> sagas) {
		this.sagas = sagas;
	}
	
	
	
	
	
}
