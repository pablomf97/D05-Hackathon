package services;

import java.util.Date;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.Assert;

import repositories.CommentRepository;
import domain.Comment;
import domain.FilmEnthusiast;

@Service
@Transactional
public class CommentService {

	//Repository
	@Autowired
	private CommentRepository commentRepository;

	//Services
	@Autowired
	private ActorService actorService;

	//CRUD METHODS

	public Comment create(){
		Comment result = new Comment();
		FilmEnthusiast principal = (FilmEnthusiast) this.actorService.findByPrincipal();

		result.setPublishedMoment(new Date(System.currentTimeMillis()-1));
		result.setFilmEnthusiast(principal);

		return result;
	}

	public Comment save(final Comment comment){
		Comment result;
		FilmEnthusiast principal = this.actorService.findByPrncipal();

		Assert.isTrue(principal.getId() == comment.getFilmEnthusiast().getId());

		if(comment.getForum() != null){
			Assert.isTrue(comment.getForum().getGroupMembers().contains(comment.getFilmEnthusiast()));
		}
		
		result = this.commentRepository.save(comment);

	}

	public void delete(final Comment comment){

		FilmEnthusiast principal = this.actorService.findByPrncipal();

		Assert.isTrue(principal.getId() == comment.getFilmEnthusiast().getId());
		
		
	}

}