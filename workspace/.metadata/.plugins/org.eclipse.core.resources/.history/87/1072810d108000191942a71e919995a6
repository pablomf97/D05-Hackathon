package services;

import java.util.ArrayList;

import javax.transaction.Transactional;
import javax.validation.Validator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import repositories.MessageBoxRepository;
import domain.Message;
import domain.MessageBox;

@Service
@Transactional
public class MessageBoxService {

	//Repository

	@Autowired
	private MessageBoxRepository messageBoxRepository;

	//Services

	@Autowired
	private ActorService actorService;

	@Autowired
	private MessageService messageService;

	@Autowired
	private Validator validator;


	//CRUD METHODS

	public MessageBox create(MessageBox box){
		MessageBox result = new MessageBox();

		if(box == null){
			result.setIsPredefined(false);
			result.setMessages(new ArrayList<Message>());

			//Parameter box is parent one
		}else{
			result.setIsPredefined(false);
			result.setMessages(new ArrayList<Message>());
			box.getChildMessageBoxes().add(result);
			result.setParentMessageBox(box);
		}

		return result;
	}

	public MessageBox findOutBoxActorId(int actorId){

		MessageBox result = this.messageBoxRepository.findOutBoxActorId(actorId);

		return result;
	}

	public MessageBox findInBoxActorId(int actorId){

		MessageBox result = this.messageBoxRepository.findInBoxActorId(actorId);

		return result;
	}
	public MessageBox findSpamBoxActorId(int actorId){

		MessageBox result = this.messageBoxRepository.findSpamBoxActorId(actorId);

		return result;
	}

	public MessageBox findTrashBoxActorId(int actorId){

		MessageBox result = this.messageBoxRepository.findTrashBoxActorId(actorId);

		return result;
	}

	public MessageBox findNotificationBoxActorId(int actorId){

		MessageBox result = this.messageBoxRepository.findNotificationBoxActorId(actorId);

		return result;
	}

}
